#middle.configMiddle
  #configContainer
    #configTabsContainer
      - @twitter_user_list.each do |twitter_user|
        .tweetAccount{:class=> twitter_user.login == @twitter_user.login ? 'tweetAccountTabSelected': 'tweetAccountTab'}
          = link_to "#{twitter_user.login}", twitter_settings_path(twitter_user.login)
      /.tweetAccountTab
      /%a.myriadProNormal{:href => "#"} Webeffect1
    .separator
    #leftPanel
      #leftPanelPhoto
        = profile_image(@twitter_user, "_normal", 211, 198)
      #inBuffer
        %img.litleBirdImage{:src => "/assets/blueBird.png"}/
        %span.rockwellRegular In Buffer
        %span.leftPanelNumBuffer (#{@count_buffer})
      #sentFromBuffer
        %img.litleBirdImage{:src => "/assets/greenBird.png"}/
        %span.rockwellRegular Sent from Buffer
        %span.leftPanelNumBuffer (#{@sent_buffers_count})
      #bitLyDetails
        = form_tag save_detail_bitly_apis_path, :remote => true, :style => "margin-top: 19px;" do
          %p.rockwellRegular.leftPanelTitleSections Add your bit.ly details
          .leftPanelBitField
            /%input.transparentInput{:value => "User Name"}/
            = text_field :bitly_api, :bitly_name, :value => @bitly.nil?? "" : @bitly.bitly_name, :required => true, :class => "transparentInput", :placeholder => "User Name"
          .leftPanelBitField
            /%input.transparentInput{:value => "API Key"}/
            = text_field :bitly_api, :api_key, :value => @bitly.nil?? "" : @bitly.api_key, :required => true, :class => "transparentInput", :placeholder => "API Key"
            = hidden_field :bitly_api, :user_id, :value => current_user.id
          %div{:onclick => "$('#loader-category').show(); $('.text-loader').html('Adding your bitly details.');", :style => "display: inline-block;"}
            %div
              = submit_tag "save", :class => "myriadProNormal leftPanelBlueButton"
              /%a.myriadProNormal{:href => "#"} Save
      #teamMembers
        %p.rockwellRegular.leftPanelTitleSections Manage team members
        %p#membersGreyText.rockwellRegular Settings | invite a team member
        #membersMail
          %img{:src => "/assets/membersLittleBird.png"}/
          %a.rockwellRegular{:href => "#"} someone@host.com
        %div
          = form_tag "/invite_team_member" do
            = text_field :member, :email, :required => true, :id => "membersField", :class => "transparentInput"
            /#leftPanelInviteButton.leftPanelBlueButton
            /%a.myriadProNormal{:href => "#"} Invite
            = submit_tag "invite", :id => "leftPanelInviteButton", :class => "leftPanelBlueButton"
    #confMainContainer
      #confMainTitleContainer
        = form_tag save_settings_path do
          %p.rockwellRegular Choose when #{@twitter_user.login} Tweets :
          #selectDatesInfo
            #selectDatesInfoFirstRec.selectedroundCornerRec.roundCornerRec.confLittleRec
            %span.rockwellRegular Selected
            .noSelectedroundCornerRec.roundCornerRec.confLittleRec
            %span.rockwellRegular No selected
          #selectDatesContainer
            #selectDatesFirstDate.roundCornerRec.confNormalRec{:onclick => "checkedBox(1);", :class=> is_day_of_week_checked?(@twitter_user, "1") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Monday
            #selectDatesTuesday.roundCornerRec.confNormalRec{:onclick => "checkedBox(2);", :class=> is_day_of_week_checked?(@twitter_user, "2") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Tuesday
            #selectDatesWednesday.roundCornerRec.confNormalRec{:onclick => "checkedBox(3);", :class=> is_day_of_week_checked?(@twitter_user, "3") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Wednesday
            #selectDatesThursday.roundCornerRec.confNormalRec{:onclick => "checkedBox(4);", :class=> is_day_of_week_checked?(@twitter_user, "4") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Thursday
            #selectDatesFriday.roundCornerRec.confNormalRec{:onclick => "checkedBox(5);", :class=> is_day_of_week_checked?(@twitter_user, "5") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Friday
            #selectDatesSaturday.roundCornerRec.confNormalRec{:onclick => "checkedBox(6);", :class=> is_day_of_week_checked?(@twitter_user, "6") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Saturday
            #selectDatesSunday.roundCornerRec.confNormalRec{:onclick => "checkedBox(7);", :class=> is_day_of_week_checked?(@twitter_user, "7") ? 'selectedroundCornerRec': 'noSelectedroundCornerRec'}
              %span.selectDateLink Sunday
            = check_box_tag "days[]", "1", is_day_of_week_checked?(@twitter_user, "1"), :class => "checkbox_time_setting", :id => "check1"
            = check_box_tag "days[]", "2", is_day_of_week_checked?(@twitter_user, "2"), :class => "checkbox_time_setting", :id => "check2"
            = check_box_tag "days[]", "3", is_day_of_week_checked?(@twitter_user, "3"), :class => "checkbox_time_setting", :id => "check3"
            = check_box_tag "days[]", "4", is_day_of_week_checked?(@twitter_user, "4"), :class => "checkbox_time_setting", :id => "check4"
            = check_box_tag "days[]", "5", is_day_of_week_checked?(@twitter_user, "5"), :class => "checkbox_time_setting", :id => "check5"
            = check_box_tag "days[]", "6", is_day_of_week_checked?(@twitter_user, "6"), :class => "checkbox_time_setting", :id => "check6"
            = check_box_tag "days[]", "7", is_day_of_week_checked?(@twitter_user, "7"), :class => "checkbox_time_setting", :id => "check7"
          #selectTimeContainer
            %p.rockwellRegular Select Time Settings :
          #selectTimeButtonsContainer 
            #selectTimeFirstButton.roundCornerRec.confBigRec{:class=> (@time_setting_type == 1 ? 'selectedroundCornerTimerRec' : 'noselectedroundCornerTimerRec') }
              %span.selectTimeLink.myriadProNormal Tweet Smart
            #selectTimeSecondButton.roundCornerRec.confBigRec{:class=> (@time_setting_type == 2 ? 'selectedroundCornerTimerRec' : 'noselectedroundCornerTimerRec') }
              %span.selectTimeLink.myriadProNormal Choose Your Tweeting Time
            #selectTimeThirdButton.roundCornerRec.confBigRec{:class=> (@time_setting_type == 3 ? 'selectedroundCornerTimerRec' : 'noselectedroundCornerTimerRec') }
              %span.selectTimeLink.myriadProNormal Customize Your Tweeting Time
          .tweetSettingsContainer

            %div{:id => "1", :style => (@time_setting_type == 1 ? 'display:block' : 'display:none'), :class => "tweetSmartSettingsContainer"}
              = "1"
              = radio_button_tag 'day_time', '1', (@time_setting_type == 1 && !@time_setting.nil? && @time_setting.post_per_day == 1)
              = "2"
              = radio_button_tag 'day_time', '2', (@time_setting_type == 1 && !@time_setting.nil? && @time_setting.post_per_day == 2)
              = "3"
              = radio_button_tag 'day_time', '3', (@time_setting_type == 1 && !@time_setting.nil? && @time_setting.post_per_day == 3)
              = "4"
              = radio_button_tag 'day_time', '4', (@time_setting_type == 1 && !@time_setting.nil? && @time_setting.post_per_day == 4)
              = "6"
              = radio_button_tag 'day_time', '6', (@time_setting_type == 1 && !@time_setting.nil? && @time_setting.post_per_day == 6)          
            %div{:id => "2", :style => (@time_setting_type == 2 ? 'display:block' : 'display:none'), :class => "chooseTweetSettingsContainer"}
              =hidden_field :timeframe, :user_id, :value => @twitter_user.user.id
              .timeframeWrapper
                .comboField
                  = timeframe_select "timeframe_id", @options,  (@time_setting_type == 2 ? @time_setting.timeframe_id.to_s: nil) ,:class=>"combo timeCombo"
              %br
              .timeWrapper
                .smallComboField
                  = time_select "start_at[hour]", choose_hours_custom, @start_time_hour, :class=>"combo timeCombo"
              .timeWrapper
                .smallComboField
                  = time_select "start_at[minute]", choose_minutes_custom, @start_time_minute, :class=>"combo timeCombo"
              .timeWrapper
                .smallComboField
                  = time_select "start_at[meridian]", choose_meridians_custom, @start_time_ampm, :class=>"combo timeCombo"
            %div{:id => "3", :style => (@time_setting_type == 3 ? 'display:block' : 'display:none'),:class => "customTweetTimeSettingsContainer"}
              #custom_tf_wrapper
                - @time_custom_list.each do |time_custom|
                  .custom_tf_select
                    .timeWrapper
                      .smallComboField
                        = time_select "tfname[hour][]", choose_hours_custom, time_custom[:hour] ,:class=>"combo timeCombo"
                    .timeWrapper
                      .smallComboField
                        = time_select "tfname[minute][]", choose_minutes_custom, time_custom[:minute] ,:class=>"combo timeCombo"
                    .timeWrapper
                      .smallComboField
                        = time_select "tfname[meridian][]", choose_meridians_custom, time_custom[:meridian] ,:class=>"combo timeCombo"
                    .crossWrapper{ :onclick => "removeInterval($(this).parents('.custom_tf_select'));"}
              =hidden_field :timeframe, :timeframe_id, :value => "99"
              =hidden_field_tag :new_form_count, @new_form_count
              %input{:type => "button", :value => "", :onclick => "newTimeInterval();", :class => "new_interval_button"}
            =hidden_field :timeframe, :user_id, :value => @twitter_user.user.id
            =hidden_field :timeframe, :twitter_user_id, :value => @twitter_user.id
            = hidden_field :timeframe, :time_setting_type, :value => @time_setting_type
            = submit_tag "", :class => "save_setting_button"
        #settingsSuggestionsContainer
          %p.rockwellRegular Manage Suggestions :
          #settingsSuggestionsButton
            %a.rockwellRegular{:href => "#"} Setting Suggestions
          #suggestionsListContainer
            %p.rockwellRegular Business Suggestions :
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
            .suggestionRow
              .suggestionFirstColumn.suggestionColumnText
                %span.myriadProNormal Lorem ipsum dolor sit amet, conse
              .suggestionSecondColumn.suggestionColumnText
                %span.myriadProNormal Business
              .suggestionButtonsColumn
                #publishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Publish
                #unpublishButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Unpublish
                #deleteButton
                  %a.myriadProNormal.suggestionButtonsLink{:href => "#"} Delete
                  

:javascript
  
  $("#menuArrow").removeClass();
  $("#menuArrow").addClass("menuArrowMyTweets");